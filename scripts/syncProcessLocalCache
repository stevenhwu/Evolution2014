#!/bin/bash

echo -e "Preprocess files at local Server.";

#### post process into ROOM folder

#for f in `ls ${LocalServerCache}/P*`;
#  do
#  id=`echo $f | sed 's/.*_\(.*\)\..*/\1/'`
#  session=${mapIDToSession[$id]}
#  room=`echo $session | sed 's/.*_\(.*\)/\1/'`
#  if `echo $session | grep -Eq "${dateCode}._.+"`
#  then 
    
 #   echo "$room $f $id  $session $room"
#    if [ ! -d "${LocalServer}/${room}/${session}" ]   
#    then   
#      mkdir -p ${LocalServer}/${room}/${session};   
#    fi
    #echo "first link $f"
#    ln -fs $f ${LocalServer}/${room}/${session}/ 
#  else 
#    echo "$session"
#  fi


#  ln -fs $f ${LocalServer}/${room}/${session}/
#done

## clean up
RoomList="${!MapRoomToIP[@]}"
for r in $RoomList
do 
   rm -r  ${LocalServer}/${r}/
done


## creat ln -s for root folder
for talk in `ls ${LocalServerCache}/Pre*`
do 
  echo $talk
  id=`echo $talk | sed 's/.*_\(.*\)\..*/\1/'`
  session=${mapIDToSession[$id]}
  if [ -z $session ]
    then
    echo "Note: canceled talk $id $session"
  else

        room=`echo $session | sed 's/.*_\(.*\)/\1/'`
        dayCode=`echo $session | sed 's/\([01234]\)._.*/\1/'`
        dayString=${MapDayCodeToDayString[$dayCode]}
        destFolder=${LocalServer}/${room}/${dayString}/${session}/


      if [ ! -d $destFolder ]
          then
            mkdir -p $destFolder;
          fi
      echo "Warning! Create links for files at root folder $id $session"
          ln -fs $talk $destFolder
   fi
done


## create ln -s
for sess in `ls ${LocalServerCache}/bysess/`;
  do
  matchRoom=`echo $sess | sed 's/.*_\(.*\)/\1/'`
  if [[  $matchRoom != "BallAB" && $matchRoom != "BalAB"   ]]
  then
    for talk in `ls ${LocalServerCache}/bysess/$sess/P*`
    do 
      id=`echo $talk | sed 's/.*_\(.*\)\..*/\1/'`
      session=${mapIDToSession[$id]}
      if [ -z $session ]
	then
	    echo "Note: canceled talk $id $session"
      elif [[ $session == ievobio* ]]
        then 
          room="402"
          dayCode="4"
          dayString=${MapDayCodeToDayString[$dayCode]}
          destFolder=${LocalServer}/${room}/${dayString}/${session}/
#      echo "ievobio ln -s $sess $session $dayCode $matchRoom $talk $talkRoom  "
      
          if [ ! -d $destFolder ]
          then
            mkdir -p $destFolder;
          fi
          ln -fs $talk $destFolder 

      else

        room=`echo $session | sed 's/.*_\(.*\)/\1/'`    
        dayCode=`echo $session | sed 's/\([01234]\)._.*/\1/'`
#dayCode=`echo $session | sed 's/\([4]\)._.*/\1/'`
#echo "=====================$dayCode"
        dayString=${MapDayCodeToDayString[$dayCode]}
        destFolder=${LocalServer}/${room}/${dayString}/${session}/

        if [[ "$matchRoom" == "$room"  && "$sess" == "$session" ]]
        then 
    #  echo "ln -s $sess $dayCode $matchRoom $talk $talkRoom  "
      
          if [ ! -d $destFolder ]
          then
            mkdir -p $destFolder;
          fi
          ln -fs $talk $destFolder 
        else
          echo "ERROR!!! XCD session != local session. ==XCD: $sess $matchRoom ===Local: $id $session $room $talk"
        fi
      fi
    done
  fi
done

. ${scriptDir}/syncManualUpload

#for r in "${!MapRoomToIP[@]}"; 
#  do 
#    if [ ! -d "${LocalServer}/${r}" ] 
#    then 
#      mkdir -p ${LocalServer}/$r; 
#    fi 
 
  #echo -e "=====Run ${dateCode}*_${r}=====${oldDateCode}=====\n\n" 
#  removeOld=`ls ${LocalServer}/${r}/ | grep -E "${oldDateCode}._"` 
#  echo "${LocalServer}/${r}"
#  echo `ls  ${LocalServer}/${r}`
#  echo "remove: $removeOld"
#  for old in ${removeOld}; do  
#    rm -r ${LocalServer}/${r}/${old}/; 
#    echo "Remov this ${LocalServer}/${r}/${old}/"
#  done 


#  rsync -arz --delete ${LocalServerCache}/${r} ${LocalServer}/${r};  

#  rsync -arzivvv --progress  --include "*${dateCode}*_${r}*" --exclude "*" --delete-excluded ${LocalServerCache}/ ${LocalServer}/${r}; 
#  rsync -arzivvv --progress  --include "${dateCode}*_${r}" --exclude "${oldDateCode}*" --delete-excluded ${LocalServerCache}/ ${LocalServer}/${r}/; 
#done 
