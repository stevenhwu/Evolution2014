#!/bin/bash
## don't think this works for mac hostname -I
LaptopServerIP="152.3.59.21"
ServerIP="152.3.59.171 152.3.59.187"
serverRecord="/home/evo14/Desktop/Evo14LocalMirror/RoomInfo/"
Room=$1

IP=`ipconfig getifaddr en0`
#en1 for wireless


#["301A"]="152.3.59.2"
if [ ! -n "${1}" ]
  then 
    echo "Please provide room code!! Exit script"
    exit 6
fi
#ifconfig en0| grep 'inet ' | cut -d: -f2 | awk '{ print $2}'

mkdir -p /Users/admin/Desktop/${1}
tempFile="/Users/admin/${1}_info"

echo "IP: $IP"
echo "[\"${Room}\"]=\"${IP}\"" >$tempFile


## send IP to server

## add pub key to authorized_keys
#cat `curl -sk3 -O https://raw.githubusercontent.com/stevenhwu/testOnly/master/ssh` > testFile
#curl -sk3 -O https://raw.githubusercontent.com/stevenhwu/testOnly/master/ssh | cat ssh > test

ALLPATS=`curl -o - -sk3 -O https://raw.githubusercontent.com/stevenhwu/testOnly/master/ssh`
IFS=$'\n'

if  [ -f ~/.ssh/authorized_keys ]
then
  for PAT in $ALLPATS 
  do
    if ! grep -q "$PAT"  ~/.ssh/authorized_keys 
    then
    #  echo "Server's pubkey already exist, do nothing."
    #else
      echo "NOT exist! appending server's pub key"
      echo "$PAT" >> ~/.ssh/authorized_keys
    fi
  done
else
  echo "Nothing exist! appending to new file"
  echo "$ALLPATS" >> ~/.ssh/authorized_keys
fi

unset IFS

## generate ssh key, if it doesn't exist
if [ -f ~/.ssh/id_dsa.pub ]
  then
    echo "Local dsa.pub exist"
  else
    echo "Create local keys"
    ssh-keygen -t dsa -f ~/.ssh/id_dsa
fi


#GET_ID="cat ~/.ssh/id_dsa.pub"
#{ eval "$GET_ID" ; }
#cat >> .ssh/authorized_keys

## copy the ssh to server
#echo "scp file:${tempFile}"
for ip in $ServerIP; do
#  echo $ip
#  echo "evo14@${ip}:${serverRecord}"
  #scp -o "StrictHostKeyChecking=no" ${tempFile} evo14@${ip}:${serverRecord}
  rsync -e 'ssh -o StrictHostKeyChecking=no' -az  ${tempFile} evo14@${ip}:${serverRecord}
  break
done
## check crontab -l, modified is accordingly


