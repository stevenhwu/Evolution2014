#!/bin/bash
## don't think this works for mac hostname -I
ServerIP="10.12.99.100 10.12.99.101"
serverRecord="/home/evo14/Desktop/Evo14LocalMirror/RoomInfo/"
Room=$1

ValidRoomCode="201  206  301A  301B  302A  302B  302C  303  304  305A  305B  306A  306B  306C  402  BalC"
MatchingCode="=201=206=301A=301B=302A=302B=302C=303=304=305A=305B=306A=306B=306C=402=BalC="

IP=`ipconfig getifaddr en0`
#en1 for wireless


## TODO make sure ROOM is valid!!
rr="=${1}="
if [[ ${MatchingCode} != *${rr}*  ]];
    then
    echo -e "ERROR!! Invalid  room code:${i}. \nValid room code: ${ValidRoomCode}\nExit script!!!"
    exit 5
fi

#["301A"]="152.3.59.2"
if [ ! -n "${1}" ]
  then 
    echo -e "Error! Please provide a room code!! \nValid room code: ${ValidRoomCode}\nExit script!!!"
    exit 6
fi
#ifconfig en0| grep 'inet ' | cut -d: -f2 | awk '{ print $2}'

mkdir -p /Users/admin/Desktop/${1}
tempFile="/Users/admin/${1}_info"

echo "Room: $Room  IP: $IP"
echo "[\"${Room}\"]=\"${IP}\"" >$tempFile


## send IP to server

## add pub key to authorized_keys
#cat `curl -sk3 -O https://raw.githubusercontent.com/stevenhwu/testOnly/master/ssh` > testFile
#curl -sk3 -O https://raw.githubusercontent.com/stevenhwu/testOnly/master/ssh | cat ssh > test

ALLPATS="ssh-dss AAAAB3NzaC1kc3MAAACBAIgKly4egK9uBJGviJ07iW11yqqg+EZyG0PaeHCAK2mLdMl+wf7rYfbQpL/wOSRguIVbpntBgX4BgUHvAqJMqNSp92pkeznOirfIHrEzbnrHdzMRNCXJ+ouultZQgaZBTnPw4Eqxl1HRpjkTQ+VPIlyYJNIFzUCKeH64r2s7y+xzAAAAFQDtbmmvFj6wO5JFjeG94DBn1NZwhQAAAIAa9r3FiVg8ieniNdFhszJsa9xkhnGRPDk9qplehZb8x4fnwLjcK4lrrlokjrZyvub1OhbsRY5xiKyFUmwL2QVPqTg/stlxXeT9fUQjAVojYGsgmQSeF59D441mHk5I6DDqvPpDOEcOVcpGCrgmDfP8M8w8JpifHm0I+iHKOHNu7wAAAIB910+29I7WIQJgbuwNNrB+y0Z60IxPHzL+HPpKohjgF2qEH7u0z+552MZ5BzCk0QGeemvHDeHASzWJaXRvQl6x+anUmNlq4qA8xDBkU4MUxG/GqgDxJDyYJ1stzhG3YItQ/oeC1pVduR7P454VOaGSxs0tmtgH/k1XV1u3gJYLLA== evo14@evo-primary
ssh-dss AAAAB3NzaC1kc3MAAACBAPcbmM8Z3EgO0+xnG1Ib+ijqNbUMDwWRQUXL+qt/3TKlysD23Av/rWMUNd69p/+9ad6H3NPV7KT2qL4HmkX0mLtAAR42mv473POI7MrGrTs5fHuwjRrIF5dAqSM/pBLnHTt4gkyq2GmX2WRxhUXWtzRIRuQ2j0Z2tMhcGO4t/8gDAAAAFQCS8nqoGx/aHNnyDYARuX7d+iB+2wAAAIB7TFj5nGFfGLpAaO1UNiUcG0G87B5uk8dCG13043L4XucaN+dpRGwVYOJzrL9Fzmdno9gx331Ax1QbX9EbDosDeAp/JT8x57mCNctnK5WkXzBAxMT+NHKu4G+V23I3YxpsHhBNCHRmNj/nssAph6Es2nTahYXi1XKPLJvv+vzC9gAAAIEA03u3YPILUlUPvKHprJaOuzEPiVD/MKoDhzodPSdXG3E5TiamOQ3VHPWlZPN//Ecdhn1G+/2P52TEvRn2iaIyktfKuXo+5Xt835T0qrnaqpmfBDJu0UvpR8wJLjVEcluW4BcY5ZEacYWvbuDQZ9Xx5o+I411Bae4y/m2uZL8zMcs= evo14@evo-secondary"

#ALLPATS=`curl -o - -sk3 -O https://raw.githubusercontent.com/stevenhwu/testOnly/master/ssh`
IFS=$'\n'

if  [ -f ~/.ssh/authorized_keys ]
then
  for PAT in $ALLPATS 
  do
    if ! grep -q "$PAT"  ~/.ssh/authorized_keys 
    then
    #  echo "Server's pubkey already exist, do nothing."
    #else
      echo "NOT exist! appending server's pub key"
      echo "$PAT" >> ~/.ssh/authorized_keys
    fi
  done
else
  echo "Nothing exist! appending to new file"
  echo "$ALLPATS" > ~/.ssh/authorized_keys
fi

unset IFS

## generate ssh key, if it doesn't exist
if [ -f ~/.ssh/id_dsa.pub ]
  then
    echo "Local dsa.pub exist"
  else
    echo "Create local keys"
    ssh-keygen -t dsa -f ~/.ssh/id_dsa
fi


#GET_ID="cat ~/.ssh/id_dsa.pub"
#{ eval "$GET_ID" ; }
#cat >> .ssh/authorized_keys

## copy the ssh to server
#echo "scp file:${tempFile}"
for ip in $ServerIP; do
#  echo $ip
#  echo "evo14@${ip}:${serverRecord}"
  #scp -o "StrictHostKeyChecking=no" ${tempFile} evo14@${ip}:${serverRecord}
  rsync -e 'ssh -o StrictHostKeyChecking=no' -az  ${tempFile} evo14@${ip}:${serverRecord}
#  break
done
## check crontab -l, modified is accordingly


