#!/bin/bash
# check id count's per session


if [[ ! -n "${1}" || ${1} == "ALL" ||  ${1} == "all" ]]
then
  RoomList="${!MapRoomToIP[@]}"
  echo -e "Sync from Local to ALL Rooms: ${RoomList}."
else
  RoomList=$1
  echo -e "Sync from Local to Room ${RoomList} ONLY."
fi


KEY="${!mapIDToSession[@]}"
unset countIDPerSession
declare -A countIDPerSession
#echo $RoomList
#echo $KEY

for k in $KEY
do
    room=${mapIDToSession[$k]}
    #echo $k $room ${countIDPerSession[$room]}
    COUNTER=$((COUNTER + 1))
    countIDPerSession[$room]=$(( countIDPerSession[$room]  +1))
    #echo -e "${countIDPerSession[$room]}\n"
done

echo "Check connections"
unset goodRoomList
declare goodRoomList
for room in $RoomList
do 
  remote=`ping -c 1 ${MapRoomToIP["$room"]}`
#  echo -e "\n\n $room \n$remote"
  if  `echo $remote | grep -q "Unreachable"` 
  then
    echo "ERROR!! unreachable $room"
  else
#    echo "GOOD. $room"
    goodRoomList+=" $room"
  fi
done
echo "GoodRoomList: $goodRoomList"

echo "Check XCD and links"
for session in `echo ${!countIDPerSession[@]} | sed 's/\s\+/\n/g' | sort`
#for session in "${!countIDPerSession[@]}"
do 
#    echo $session ${countIDPerSession[$session]}
    room=`echo $session | sed 's/.*_\(.*\)/\1/'`            
    dayCode=`echo $session | sed 's/\([01234]\)._.*/\1/'`
    dayString=${MapDayCodeToDayString[$dayCode]}
    destFolder=${LocalServer}/${room}/${dayString}/${session}/
#    echo $destFolder   
    if [  -d $destFolder ]
	then
	XCDFolder=`ls ${LocalServerCache}/bysess/$session/`
	XCDCount=`ls ${LocalServerCache}/bysess/${session}/ | sed 's/\s+/\n/g' | sed 's/.*_\(.*\)\..*/\1/' | uniq -c | wc -l`
	symCount=`ls $destFolder | sed 's/\s+/\n/g' | sed 's/.*_\(.*\)\..*/\1/' | uniq -c | wc -l`  

    	expectedCount="${countIDPerSession[$session]}"

#	if [[ "$XCDCount" != "$symCount" ]]
#      	then 
#  	    echo "Warning!!!! different count between XCD and symbolic links (due to manual uploads and canceled talks): $room $session XCDCount $XCDCount != SymbolicLinkCount $symCount"
#	fi

	if [[ "$symCount" != "$expectedCount" ]]
      	then 
  		echo "Incomplete!!!!$room $session $symCount != $expectedCount (expected)"
		echo `ls $destFolder`
	fi

        if [[ ${goodRoomList} == *${room}*  ]]
        then 
          remoteFolder="/Users/admin/Desktop/${room}/${dayString}/${session}"
          remoteList=`ssh admin@${MapRoomToIP["$room"]} bash -c "'
		cd $remoteFolder
		ls
		'"`

	  remoteCount=`echo ${remoteList} | sed 's/\s\+/\n/g' | sed 's/.*_\(.*\)\..*/\1/g' | uniq -c | wc -l`

	  if [[ "$remoteCount" != "$symCount" ]]
          then
            echo -e "ERROR!!!!$room $session $remoteCount != $symCount($expectedCount) (remoteCount != serverCount)\n${remoteList}\n\n"
          fi
        fi


#    echo `echo $uniqCount | wc`
    #echo $destFolder `ls $destFolder`
   fi
done

