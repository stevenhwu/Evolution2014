#!/bin/bash
# check id count's per session

export scriptDir="${HOME}/Evolution2014/scripts/"
. ${scriptDir}/exportAllVariables


if [[ ! -n "${1}" || ${1} == "ALL" ||  ${1} == "all" ]]
then
  RoomList="${!MapRoomToIP[@]}"
  echo -e "Check ALL Rooms: ${RoomList}."
else
  RoomList=$1
  echo -e "CheckRoom ${RoomList} ONLY."
fi


if [[ ! -n "${2}" || ${2} == "ALL" ||  ${2} == "all" ]]
then
  CheckSessionList=" 1A 1B 1C 1D 2A 2B 2C 2D 3A 3B 3C 3D 4A 4B 4C 4D "
  echo -e "Check ALL sessions"
elif [[ ${#2} -eq 1 ]]
then
  CheckSessionList=" ${2}A ${2}B ${2}C ${2}D "
  echo -e "Check session ${CheckSessionList} ONLY."
else
  CheckSessionList=" ${2} "
  echo -e "Check session ${CheckSessionList} ONLY."
fi


KEY="${!mapIDToSession[@]}"
unset countIDPerSession
declare -A countIDPerSession
#echo ${mapIDToSession[9]}
#echo $KEY

for k in $KEY
do
    room=${mapIDToSession[$k]}
    #echo $k $room ${countIDPerSession[$room]}
    COUNTER=$((COUNTER + 1))
    countIDPerSession[$room]=$(( countIDPerSession[$room]  +1))
    #echo -e "${countIDPerSession[$room]}\n"
done

##echo "Check connections"
#unset goodRoomList
#declare goodRoomList
#for room in $RoomList
#do 
#  remote=`ping -c 1 ${MapRoomToIP["$room"]}`
##  echo -e "\n\n $room \n$remote"
#  if  `echo $remote | grep -q "Unreachable"` 
#  then
#    echo "ERROR!! unreachable $room"
#  else
##    echo "GOOD. $room"
#    goodRoomList+=" $room"
#  fi
#done
goodRoomList="`source ${scriptDir}/testPingAllRoom`"
#echo "GoodRoomList: $goodRoomList"

echo "Check XCD and links"
for session in `echo ${!countIDPerSession[@]} | sed 's/\s\+/\n/g' | sort`
#for session in "${!countIDPerSession[@]}"
do
sessionPre=`echo $session | sed 's/\(.*\)_.*/\1/'` 
if [[ ${CheckSessionList} == *${sessionPre}*  ]]
then
#    echo $session ${countIDPerSession[$session]}
    room=`echo $session | sed 's/.*_\(.*\)/\1/'`            
    dayCode=`echo $session | sed 's/\([01234]\)._.*/\1/'`
    dayString=${MapDayCodeToDayString[$dayCode]}
    destFolder=${LocalServer}/${room}/${dayString}/${session}/
#    echo $destFolder   
    if [[  -d $destFolder  && ${goodRoomList} == *${room}* ]]
	then
	XCDFolder=`ls ${LocalServerCache}/bysess/$session/`
	XCDCount=`ls ${LocalServerCache}/bysess/${session}/ | sed 's/\s+/\n/g' | sed 's/.*_\(.*\)\..*/\1/' | uniq -c | wc -l`
	symCount=`ls $destFolder | sed 's/\s+/\n/g' | sed 's/.*_\(.*\)\..*/\1/' | uniq -c | wc -l`  

    	expectedCount="${countIDPerSession[$session]}"

#	if [[ "$XCDCount" != "$symCount" ]]
#      	then 
#  	    echo "Warning!!!! different count between XCD and symbolic links (due to manual uploads and canceled talks): $room $session XCDCount $XCDCount != SymbolicLinkCount $symCount"
#	fi

	if [[ "$symCount" != "$expectedCount" ]]
      	then 
  		echo "Incomplete!!!!$room $session $symCount != $expectedCount (expected)"
		echo -e "`ls $destFolder`\n========================\n"
	fi

        #if [[ ${goodRoomList} == *${room}*  ]]
        #then 
          remoteFolder="/Users/admin/Desktop/${room}/${dayString}/${session}"
	  grepString='Pre.*_[0-9]+\\..*'
          remoteList=`ssh admin@${MapRoomToIP["$room"]} bash -c "'
		cd $remoteFolder
		ls | grep -E ${grepString}
		'"`

	  remoteCount=`echo ${remoteList} | sed 's/\s\+/\n/g' | sed 's/.*_\(.*\)\..*/\1/g' | uniq -c | wc -l`

	  if [[ "$remoteCount" != "$symCount" ]]
          then
            echo -e "ERROR!!!!$room $session $remoteCount != $symCount($expectedCount) (remoteCount != serverCount)\n${remoteList}\n\n"
          fi
#        fi


#    echo `echo $uniqCount | wc`
    #echo $destFolder `ls $destFolder`
   fi
fi
done

